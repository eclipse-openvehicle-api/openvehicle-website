.. _vapi-howto_write_rst:

How to write reStructuredText
=============================

.. contents::
    :local:
    :depth: 2

To write an `.rst` (reStructuredText) file, follow these instructions:

1. **File Extension**: Save the file with a `.rst` extension, e.g., `example.rst`.

2. **Headings**: Use `=` for the main title, `-` for subheadings, and `~` or `^` for deeper levels. Ensure the underline matches the title length.

    .. code-block:: rst

        Here's a widely used and recommended order:

        Level	Character	Example
        H1	=	Main Title
        H2	-	Major Section
        H3	~	Subsection
        H4	^	Sub-subsection
        H5	"	Lower-level section
        H6	'	Even lower-level

Title1
======

Title2
------

Title3
~~~~~~

Title4
^^^^^^

Title5
""""""

Title6
''''''


3. **Paragraphs**: Write plain text for paragraphs. Leave a blank line between paragraphs.

4. **Lists**:
    - Use `-` or `*` for unordered lists.
    - Use numbers followed by a period for ordered lists.

    .. code-block:: rst

        - Item 1
        - Item 2
        
        1. First
        2. Second

5. **Links**: Use backticks and an underscore for hyperlinks.

    .. code-block:: rst

        `Link Text <https://example.com>`_

6. **Inline Formatting**:
    - **Bold**: `**text**`
    - *Italic*: `*text*`
    - ``Literal text``: Use double backticks.

7. **Images**: Use the `.. image::` directive.

    .. code-block:: rst

        .. image:: path/to/image.png
              :alt: Description
              :width: 300px

8. **Tables**: Use the `.. table::` or `.. csv-table::` directive.

    .. code-block:: rst

        .. table:: Example Table
        
              +------+-----+
              | Col1 | Col2|
              +------+-----+
              | Val1 | Val2|
              +------+-----+

    .. table:: Example Table
        
        +------+-----+
        | Col1 | Col2|
        +------+-----+
        | Val1 | Val2|
        +------+-----+


9. **Code Blocks**: Use the `.. code-block::` directive.

    .. code-block:: rst

        .. code-block:: cpp
        
              #include <iostream>
              
              void hello()
              {
                std::cout << "Open Vehicle API!" << std::endl;
              }

10. **Admonitions**: Use directives like `.. note::`, `.. warning::`, or `.. tip::`.

     .. code-block:: rst

         .. note::
         
                This is a note.

11. **Figures**: Use the `.. figure::` directive for images with captions.

     .. code-block:: rst

         .. figure:: path/to/image.png
                :scale: 50%
         
                Caption text.



12. **Include Files**: Use the `.. literalinclude::` directive to include external files.

     .. code-block:: rst

         .. literalinclude:: path/to/file.cpp
                :language: cpp
             

13. **Epigraphs**: Use the `.. epigraph::` directive for quotes.

     .. code-block:: rst

         .. epigraph::
                "To be or not to be."
                :attribution: Shakespeare

    .. epigraph::
        "To be or not to be."
        :attribution: Shakespeare


14. **TabSets**: Use the `.. tab-set::` and `.. tab-item::` directives for tabbed content.

     .. code-block:: rst

         .. tab-set::
         
                .. tab-item:: Tab 1
         
                        Content for Tab 1.
         
                .. tab-item:: Tab 2
         
                        Content for Tab 2.

    .. tab-set::
         
        .. tab-item:: Tab 1
         
            Content for Tab 1.
         
        .. tab-item:: Tab 2
         
            Content for Tab 2.


14. **Tabs**: Use the `.. tabs::` and `.. tab::` directives for tabbed content.

     .. code-block:: rst

        .. tabs::

            .. tab:: Tab 1
                Content for Tab 1 goes here.

            .. tab:: Tab 2
                Content for Tab 2 goes here.

            .. tab:: Tab 3
                Content for Tab 3 goes here.

    .. tabs::

        .. tab:: Tab 1
            Content for Tab 1 goes here.

        .. tab:: Tab 2
            Content for Tab 2 goes here.

        .. tab:: Tab 3
            Content for Tab 3 goes here.




15. **Cards**: Use the `.. card::` directive for card-like content.

     .. code-block:: rst

         .. card:: Card Title
         
                Header
                ^^^
         
                Content
                +++
         
                Footer

    .. card:: Card Title
         
        Header
        ^^^
         
        Content
        +++
         
        Footer



16. **seealso**: Use the `.. seealso::` 

    .. code-block:: rst

        .. seealso:: This is a simple **seealso** note.

    .. seealso:: This is a simple **seealso** note.


17. **note**: Use the `.. note::` 

    .. code-block:: rst

        .. note::  This is a **note** box.

    .. note::  This is a **note** box.            


18. **warning**: Use the `.. warning::` 

    .. code-block:: rst

        .. warning:: This is a **warning** box.  

    .. warning:: This is a **warning** box.  


19. **tip**: Use the `.. tip::` 

    .. code-block:: rst

        .. tip:: This is a **tip** box.  

    .. tip:: This is a **tip** box.  

20. **attention**: Use the `.. attention::`  

    .. code-block:: rst

        .. attention:: This is a **attention** box. 

    .. attention:: This is a **attention** box. 

21. **caution**: Use the `.. caution::`  

    .. code-block:: rst

        .. caution:: This is a **caution** box.  

    .. caution:: This is a **caution** box.  

22.  **hint**: Use the `.. hint::`  

    .. code-block:: rst

        .. hint:: This is a **hint** box.  

    .. hint:: This is a **hint** box.         

23.  **important**: Use the `.. important::`  

    .. code-block:: rst

        .. important:: This is a **important** box.  

    .. important:: This is a **important** box.   

24.  **error**: Use the `.. error::`  

    .. code-block:: rst

        .. error:: This is a **ierror** box.  

    .. error:: This is a **ierror** box.           

25.  **todo**: Use the `.. todo::`  

    .. code-block:: rst

        .. todo:: This is a **todo** box.  

26.  **danger**: Use the `.. danger::`  

    .. code-block:: rst

        .. danger:: This is a **danger** box.  

    .. danger:: This is a **danger** box.     
           

These are the basic elements for writing `.rst` files. Use them as needed for your documentation.
