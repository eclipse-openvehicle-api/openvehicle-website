
.. _program_listing_file_sdv_idl_compiler_entities_parameter_entity.h:

Program Listing for File parameter_entity.h
===========================================

|exhale_lsh| :ref:`Return to documentation for file <file_sdv_idl_compiler_entities_parameter_entity.h>` (``sdv_idl_compiler\entities\parameter_entity.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #ifndef PARAMETER_ENTITY_H
   #define PARAMETER_ENTITY_H
   
   #include "declaration_entity.h"
   
   class CParameterEntity : public CDeclarationEntity, public sdv::idl::IParameterEntity
   {
   public:
       CParameterEntity(const CContextPtr& rptrContext, CEntityPtr ptrParent, const CTokenList& rlstTokenList,
           bool bEnforceDirection = true);
   
       virtual ~CParameterEntity() override = default;
   
       virtual sdv::interface_t GetInterface(sdv::interface_id idInterface) override;
   
       virtual  sdv::idl::EEntityType GetType() const override { return  sdv::idl::EEntityType::type_parameter; }
   
       virtual void Process() override;
   
       virtual bool SupportArrays() const override { return true; }
   
       virtual bool SupportInterface() const override { return true; }
   
       virtual sdv::idl::IParameterEntity::EParameterDirection GetDirection() const override { return m_eDirection; }
   
       virtual bool RequiresAssignment() const override;
   
       virtual bool IsReadOnly() const override { return false; }
   
       virtual void CalcHash(CHashObject& rHash) const override;
   
   private:
       bool                m_bEnforceDirection;    
       sdv::idl::IParameterEntity::EParameterDirection m_eDirection =
           sdv::idl::IParameterEntity::EParameterDirection::unknown;         
   };
   
   #endif // !defined(PARAMETER_ENTITY_H)
