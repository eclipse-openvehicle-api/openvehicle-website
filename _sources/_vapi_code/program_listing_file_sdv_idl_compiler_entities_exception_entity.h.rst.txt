
.. _program_listing_file_sdv_idl_compiler_entities_exception_entity.h:

Program Listing for File exception_entity.h
===========================================

|exhale_lsh| :ref:`Return to documentation for file <file_sdv_idl_compiler_entities_exception_entity.h>` (``sdv_idl_compiler\entities\exception_entity.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #ifndef EXCEPTION_ENTITY_H
   #define EXCEPTION_ENTITY_H
   
   #include "definition_entity.h"
   #include "struct_entity.h"
   
   class CExceptionEntity : public CStructEntity
   {
   public:
       CExceptionEntity(const CContextPtr& rptrContext, CEntityPtr ptrParent);
   
       virtual ~CExceptionEntity() override = default;
   
       virtual  sdv::idl::EEntityType GetType() const override { return  sdv::idl::EEntityType::type_exception; }
   
       virtual std::string GetDeclTypeStr(bool bResolveTypedef) const override;
   
       // Suppress cppcheck warning of a useless override. The function is here for better understanding.
       // cppcheck-suppress uselessOverride
       virtual void Process() override;
   
       virtual bool Supports(EDefinitionSupport eSupport) const override;
   
       virtual void CreateValueNode() override;
   };
   
   
   #endif // !defined(EXCEPTION_ENTITY_H)
